<<<<<<< HEAD
{"version":3,"file":"getAndroidSplashConfig.js","names":["defaultResizeMode","getAndroidSplashConfig","config","android","splash","xxxhdpi","image","xxhdpi","xhdpi","hdpi","mdpi","backgroundColor","resizeMode","getAndroidDarkSplashConfig","dark","lightTheme"],"sources":["../../../../src/plugins/unversioned/expo-splash-screen/getAndroidSplashConfig.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nexport type SplashScreenConfig = {\n  xxxhdpi: string | null;\n  xxhdpi: string | null;\n  xhdpi: string | null;\n  hdpi: string | null;\n  mdpi: string | null;\n  backgroundColor: string | null;\n  resizeMode: 'contain' | 'cover' | 'native';\n};\n\nconst defaultResizeMode = 'contain';\n\nexport function getAndroidSplashConfig(\n  config: Pick<ExpoConfig, 'splash' | 'android'>\n): SplashScreenConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except android.\n  if (config.android?.splash) {\n    const splash = config.android?.splash;\n    return {\n      xxxhdpi: splash.xxxhdpi ?? splash.image ?? null,\n      xxhdpi: splash.xxhdpi ?? splash.image ?? null,\n      xhdpi: splash.xhdpi ?? splash.image ?? null,\n      hdpi: splash.hdpi ?? splash.image ?? null,\n      mdpi: splash.mdpi ?? splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n    };\n  }\n\n  if (config.splash) {\n    const splash = config.splash;\n    return {\n      xxxhdpi: splash.image ?? null,\n      xxhdpi: splash.image ?? null,\n      xhdpi: splash.image ?? null,\n      hdpi: splash.image ?? null,\n      mdpi: splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n    };\n  }\n\n  return null;\n}\n\n// TODO: dark isn't supported in the Expo config spec yet.\nexport function getAndroidDarkSplashConfig(\n  config: Pick<ExpoConfig, 'splash' | 'android'>\n): SplashScreenConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except android.\n  if (config.android?.splash?.dark) {\n    const splash = config.android?.splash?.dark;\n    const lightTheme = getAndroidSplashConfig(config);\n    return {\n      xxxhdpi: splash.xxxhdpi ?? splash.image ?? null,\n      xxhdpi: splash.xxhdpi ?? splash.image ?? null,\n      xhdpi: splash.xhdpi ?? splash.image ?? null,\n      hdpi: splash.hdpi ?? splash.image ?? null,\n      mdpi: splash.mdpi ?? splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      // Can't support dark resizeMode because the resize mode is hardcoded into the MainActivity.java\n      resizeMode: lightTheme?.resizeMode ?? defaultResizeMode,\n    };\n  }\n\n  return null;\n}\n"],"mappings":";;;;;;;AAYA,MAAMA,iBAAiB,GAAG,SAAS;AAE5B,SAASC,sBAAsB,CACpCC,MAA8C,EACnB;EAAA;EAC3B;EACA;EACA,uBAAIA,MAAM,CAACC,OAAO,4CAAd,gBAAgBC,MAAM,EAAE;IAAA;IAC1B,MAAMA,MAAM,uBAAGF,MAAM,CAACC,OAAO,qDAAd,iBAAgBC,MAAM;IACrC,OAAO;MACLC,OAAO,6BAAED,MAAM,CAACC,OAAO,6DAAID,MAAM,CAACE,KAAK,uCAAI,IAAI;MAC/CC,MAAM,6BAAEH,MAAM,CAACG,MAAM,2DAAIH,MAAM,CAACE,KAAK,yCAAI,IAAI;MAC7CE,KAAK,4BAAEJ,MAAM,CAACI,KAAK,yDAAIJ,MAAM,CAACE,KAAK,yCAAI,IAAI;MAC3CG,IAAI,2BAAEL,MAAM,CAACK,IAAI,uDAAIL,MAAM,CAACE,KAAK,yCAAI,IAAI;MACzCI,IAAI,2BAAEN,MAAM,CAACM,IAAI,uDAAIN,MAAM,CAACE,KAAK,yCAAI,IAAI;MACzCK,eAAe,2BAAEP,MAAM,CAACO,eAAe,yEAAI,IAAI;MAC/CC,UAAU,wBAAER,MAAM,CAACQ,UAAU,mEAAIZ;IACnC,CAAC;EACH;EAEA,IAAIE,MAAM,CAACE,MAAM,EAAE;IAAA;IACjB,MAAMA,MAAM,GAAGF,MAAM,CAACE,MAAM;IAC5B,OAAO;MACLC,OAAO,mBAAED,MAAM,CAACE,KAAK,yDAAI,IAAI;MAC7BC,MAAM,oBAAEH,MAAM,CAACE,KAAK,2DAAI,IAAI;MAC5BE,KAAK,oBAAEJ,MAAM,CAACE,KAAK,2DAAI,IAAI;MAC3BG,IAAI,oBAAEL,MAAM,CAACE,KAAK,2DAAI,IAAI;MAC1BI,IAAI,oBAAEN,MAAM,CAACE,KAAK,2DAAI,IAAI;MAC1BK,eAAe,4BAAEP,MAAM,CAACO,eAAe,2EAAI,IAAI;MAC/CC,UAAU,yBAAER,MAAM,CAACQ,UAAU,qEAAIZ;IACnC,CAAC;EACH;EAEA,OAAO,IAAI;AACb;;AAEA;AACO,SAASa,0BAA0B,CACxCX,MAA8C,EACnB;EAAA;EAC3B;EACA;EACA,wBAAIA,MAAM,CAACC,OAAO,sEAAd,iBAAgBC,MAAM,kDAAtB,sBAAwBU,IAAI,EAAE;IAAA;IAChC,MAAMV,MAAM,uBAAGF,MAAM,CAACC,OAAO,8EAAd,iBAAgBC,MAAM,0DAAtB,sBAAwBU,IAAI;IAC3C,MAAMC,UAAU,GAAGd,sBAAsB,CAACC,MAAM,CAAC;IACjD,OAAO;MACLG,OAAO,+BAAED,MAAM,CAACC,OAAO,+DAAID,MAAM,CAACE,KAAK,yCAAI,IAAI;MAC/CC,MAAM,8BAAEH,MAAM,CAACG,MAAM,6DAAIH,MAAM,CAACE,KAAK,yCAAI,IAAI;MAC7CE,KAAK,6BAAEJ,MAAM,CAACI,KAAK,2DAAIJ,MAAM,CAACE,KAAK,yCAAI,IAAI;MAC3CG,IAAI,4BAAEL,MAAM,CAACK,IAAI,yDAAIL,MAAM,CAACE,KAAK,yCAAI,IAAI;MACzCI,IAAI,6BAAEN,MAAM,CAACM,IAAI,yDAAIN,MAAM,CAACE,KAAK,2CAAI,IAAI;MACzCK,eAAe,4BAAEP,MAAM,CAACO,eAAe,2EAAI,IAAI;MAC/C;MACAC,UAAU,2BAAEG,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEH,UAAU,yEAAIZ;IACxC,CAAC;EACH;EAEA,OAAO,IAAI;AACb"}
=======
{"version":3,"file":"getAndroidSplashConfig.js","names":["defaultResizeMode","getAndroidSplashConfig","config","android","splash","xxxhdpi","image","xxhdpi","xhdpi","hdpi","mdpi","backgroundColor","resizeMode","getAndroidDarkSplashConfig","dark","lightTheme"],"sources":["../../../../src/plugins/unversioned/expo-splash-screen/getAndroidSplashConfig.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nexport type SplashScreenConfig = {\n  xxxhdpi: string | null;\n  xxhdpi: string | null;\n  xhdpi: string | null;\n  hdpi: string | null;\n  mdpi: string | null;\n  backgroundColor: string | null;\n  resizeMode: 'contain' | 'cover' | 'native';\n};\n\nconst defaultResizeMode = 'contain';\n\nexport function getAndroidSplashConfig(\n  config: Pick<ExpoConfig, 'splash' | 'android'>\n): SplashScreenConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except android.\n  if (config.android?.splash) {\n    const splash = config.android?.splash;\n    return {\n      xxxhdpi: splash.xxxhdpi ?? splash.image ?? null,\n      xxhdpi: splash.xxhdpi ?? splash.image ?? null,\n      xhdpi: splash.xhdpi ?? splash.image ?? null,\n      hdpi: splash.hdpi ?? splash.image ?? null,\n      mdpi: splash.mdpi ?? splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n    };\n  }\n\n  if (config.splash) {\n    const splash = config.splash;\n    return {\n      xxxhdpi: splash.image ?? null,\n      xxhdpi: splash.image ?? null,\n      xhdpi: splash.image ?? null,\n      hdpi: splash.image ?? null,\n      mdpi: splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n    };\n  }\n\n  return null;\n}\n\n// TODO: dark isn't supported in the Expo config spec yet.\nexport function getAndroidDarkSplashConfig(\n  config: Pick<ExpoConfig, 'splash' | 'android'>\n): SplashScreenConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except android.\n  if (config.android?.splash?.dark) {\n    const splash = config.android?.splash?.dark;\n    const lightTheme = getAndroidSplashConfig(config);\n    return {\n      xxxhdpi: splash.xxxhdpi ?? splash.image ?? null,\n      xxhdpi: splash.xxhdpi ?? splash.image ?? null,\n      xhdpi: splash.xhdpi ?? splash.image ?? null,\n      hdpi: splash.hdpi ?? splash.image ?? null,\n      mdpi: splash.mdpi ?? splash.image ?? null,\n      backgroundColor: splash.backgroundColor ?? null,\n      // Can't support dark resizeMode because the resize mode is hardcoded into the MainActivity.java\n      resizeMode: lightTheme?.resizeMode ?? defaultResizeMode,\n    };\n  }\n\n  return null;\n}\n"],"mappings":";;;;;;;AAYA,MAAMA,iBAAiB,GAAG,SAA1B;;AAEO,SAASC,sBAAT,CACLC,MADK,EAEsB;EAAA;;EAC3B;EACA;EACA,uBAAIA,MAAM,CAACC,OAAX,4CAAI,gBAAgBC,MAApB,EAA4B;IAAA;;IAC1B,MAAMA,MAAM,uBAAGF,MAAM,CAACC,OAAV,qDAAG,iBAAgBC,MAA/B;IACA,OAAO;MACLC,OAAO,6BAAED,MAAM,CAACC,OAAT,6DAAoBD,MAAM,CAACE,KAA3B,uCAAoC,IADtC;MAELC,MAAM,6BAAEH,MAAM,CAACG,MAAT,2DAAmBH,MAAM,CAACE,KAA1B,yCAAmC,IAFpC;MAGLE,KAAK,4BAAEJ,MAAM,CAACI,KAAT,yDAAkBJ,MAAM,CAACE,KAAzB,yCAAkC,IAHlC;MAILG,IAAI,2BAAEL,MAAM,CAACK,IAAT,uDAAiBL,MAAM,CAACE,KAAxB,yCAAiC,IAJhC;MAKLI,IAAI,2BAAEN,MAAM,CAACM,IAAT,uDAAiBN,MAAM,CAACE,KAAxB,yCAAiC,IALhC;MAMLK,eAAe,2BAAEP,MAAM,CAACO,eAAT,yEAA4B,IANtC;MAOLC,UAAU,wBAAER,MAAM,CAACQ,UAAT,mEAAuBZ;IAP5B,CAAP;EASD;;EAED,IAAIE,MAAM,CAACE,MAAX,EAAmB;IAAA;;IACjB,MAAMA,MAAM,GAAGF,MAAM,CAACE,MAAtB;IACA,OAAO;MACLC,OAAO,mBAAED,MAAM,CAACE,KAAT,yDAAkB,IADpB;MAELC,MAAM,oBAAEH,MAAM,CAACE,KAAT,2DAAkB,IAFnB;MAGLE,KAAK,oBAAEJ,MAAM,CAACE,KAAT,2DAAkB,IAHlB;MAILG,IAAI,oBAAEL,MAAM,CAACE,KAAT,2DAAkB,IAJjB;MAKLI,IAAI,oBAAEN,MAAM,CAACE,KAAT,2DAAkB,IALjB;MAMLK,eAAe,4BAAEP,MAAM,CAACO,eAAT,2EAA4B,IANtC;MAOLC,UAAU,yBAAER,MAAM,CAACQ,UAAT,qEAAuBZ;IAP5B,CAAP;EASD;;EAED,OAAO,IAAP;AACD,C,CAED;;;AACO,SAASa,0BAAT,CACLX,MADK,EAEsB;EAAA;;EAC3B;EACA;EACA,wBAAIA,MAAM,CAACC,OAAX,sEAAI,iBAAgBC,MAApB,kDAAI,sBAAwBU,IAA5B,EAAkC;IAAA;;IAChC,MAAMV,MAAM,uBAAGF,MAAM,CAACC,OAAV,8EAAG,iBAAgBC,MAAnB,0DAAG,sBAAwBU,IAAvC;IACA,MAAMC,UAAU,GAAGd,sBAAsB,CAACC,MAAD,CAAzC;IACA,OAAO;MACLG,OAAO,+BAAED,MAAM,CAACC,OAAT,+DAAoBD,MAAM,CAACE,KAA3B,yCAAoC,IADtC;MAELC,MAAM,8BAAEH,MAAM,CAACG,MAAT,6DAAmBH,MAAM,CAACE,KAA1B,yCAAmC,IAFpC;MAGLE,KAAK,6BAAEJ,MAAM,CAACI,KAAT,2DAAkBJ,MAAM,CAACE,KAAzB,yCAAkC,IAHlC;MAILG,IAAI,4BAAEL,MAAM,CAACK,IAAT,yDAAiBL,MAAM,CAACE,KAAxB,yCAAiC,IAJhC;MAKLI,IAAI,6BAAEN,MAAM,CAACM,IAAT,yDAAiBN,MAAM,CAACE,KAAxB,2CAAiC,IALhC;MAMLK,eAAe,4BAAEP,MAAM,CAACO,eAAT,2EAA4B,IANtC;MAOL;MACAC,UAAU,2BAAEG,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEH,UAAd,yEAA4BZ;IARjC,CAAP;EAUD;;EAED,OAAO,IAAP;AACD"}
>>>>>>> main
