<<<<<<< HEAD
{"version":3,"names":["OraNoop","spinner","interval","frames","indent","isSpinning","text","prefixText","color","succeed","_text","fail","start","stop","warn","info","stopAndPersist","clear","render","frame","getLoader","options","logger","isVerbose","ora","NoopLoader"],"sources":["../src/loader.ts"],"sourcesContent":["import ora from 'ora';\nimport type {Ora, Options, Spinner, Color} from 'ora';\nimport logger from './logger';\n\nexport type Loader = Ora;\n\nclass OraNoop implements Loader {\n  spinner: Spinner = {interval: 1, frames: []};\n  indent: number = 0;\n  isSpinning: boolean = false;\n  text: string = '';\n  prefixText: string = '';\n  color: Color = 'blue';\n\n  succeed(_text?: string | undefined) {\n    return this;\n  }\n  fail(_text?: string) {\n    return this;\n  }\n  start(_text?: string) {\n    return this;\n  }\n  stop() {\n    return this;\n  }\n  warn(_text?: string) {\n    return this;\n  }\n  info(_text?: string) {\n    return this;\n  }\n  stopAndPersist() {\n    return this;\n  }\n  clear() {\n    return this;\n  }\n  render() {\n    return this;\n  }\n  frame() {\n    return this.text;\n  }\n}\n\nexport function getLoader(options?: string | Options | undefined): Loader {\n  return logger.isVerbose() ? new OraNoop() : ora(options);\n}\n\nexport const NoopLoader = OraNoop;\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAEA;AAA8B;AAI9B,MAAMA,OAAO,CAAmB;EAC9BC,OAAO,GAAY;IAACC,QAAQ,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC;EAC5CC,MAAM,GAAW,CAAC;EAClBC,UAAU,GAAY,KAAK;EAC3BC,IAAI,GAAW,EAAE;EACjBC,UAAU,GAAW,EAAE;EACvBC,KAAK,GAAU,MAAM;EAErBC,OAAO,CAACC,KAA0B,EAAE;IAClC,OAAO,IAAI;EACb;EACAC,IAAI,CAACD,KAAc,EAAE;IACnB,OAAO,IAAI;EACb;EACAE,KAAK,CAACF,KAAc,EAAE;IACpB,OAAO,IAAI;EACb;EACAG,IAAI,GAAG;IACL,OAAO,IAAI;EACb;EACAC,IAAI,CAACJ,KAAc,EAAE;IACnB,OAAO,IAAI;EACb;EACAK,IAAI,CAACL,KAAc,EAAE;IACnB,OAAO,IAAI;EACb;EACAM,cAAc,GAAG;IACf,OAAO,IAAI;EACb;EACAC,KAAK,GAAG;IACN,OAAO,IAAI;EACb;EACAC,MAAM,GAAG;IACP,OAAO,IAAI;EACb;EACAC,KAAK,GAAG;IACN,OAAO,IAAI,CAACb,IAAI;EAClB;AACF;AAEO,SAASc,SAAS,CAACC,OAAsC,EAAU;EACxE,OAAOC,eAAM,CAACC,SAAS,EAAE,GAAG,IAAIvB,OAAO,EAAE,GAAG,IAAAwB,cAAG,EAACH,OAAO,CAAC;AAC1D;AAEO,MAAMI,UAAU,GAAGzB,OAAO;AAAC"}
=======
{"version":3,"sources":["../src/loader.ts"],"names":["OraNoop","interval","frames","succeed","_text","fail","start","stop","warn","info","stopAndPersist","clear","render","frame","text","getLoader","options","logger","isVerbose","NoopLoader"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;;;;;;AAIA,MAAMA,OAAN,CAAgC;AAAA;AAAA,qCACX;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADW;;AAAA,oCAEb,CAFa;;AAAA,wCAGR,KAHQ;;AAAA,kCAIf,EAJe;;AAAA,wCAKT,EALS;;AAAA,mCAMf,MANe;AAAA;;AAQ9BC,EAAAA,OAAO,CAACC,KAAD,EAA6B;AAClC,WAAO,IAAP;AACD;;AACDC,EAAAA,IAAI,CAACD,KAAD,EAAiB;AACnB,WAAO,IAAP;AACD;;AACDE,EAAAA,KAAK,CAACF,KAAD,EAAiB;AACpB,WAAO,IAAP;AACD;;AACDG,EAAAA,IAAI,GAAG;AACL,WAAO,IAAP;AACD;;AACDC,EAAAA,IAAI,CAACJ,KAAD,EAAiB;AACnB,WAAO,IAAP;AACD;;AACDK,EAAAA,IAAI,CAACL,KAAD,EAAiB;AACnB,WAAO,IAAP;AACD;;AACDM,EAAAA,cAAc,GAAG;AACf,WAAO,IAAP;AACD;;AACDC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AACDC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKC,IAAZ;AACD;;AArC6B;;AAwCzB,SAASC,SAAT,CAAmBC,OAAnB,EAAmE;AACxE,SAAOC,gBAAOC,SAAP,KAAqB,IAAIlB,OAAJ,EAArB,GAAqC,oBAAIgB,OAAJ,CAA5C;AACD;;AAEM,MAAMG,UAAU,GAAGnB,OAAnB","sourcesContent":["import ora from 'ora';\nimport type {Ora, Options, Spinner, Color} from 'ora';\nimport logger from './logger';\n\nexport type Loader = Ora;\n\nclass OraNoop implements Loader {\n  spinner: Spinner = {interval: 1, frames: []};\n  indent: number = 0;\n  isSpinning: boolean = false;\n  text: string = '';\n  prefixText: string = '';\n  color: Color = 'blue';\n\n  succeed(_text?: string | undefined) {\n    return this;\n  }\n  fail(_text?: string) {\n    return this;\n  }\n  start(_text?: string) {\n    return this;\n  }\n  stop() {\n    return this;\n  }\n  warn(_text?: string) {\n    return this;\n  }\n  info(_text?: string) {\n    return this;\n  }\n  stopAndPersist() {\n    return this;\n  }\n  clear() {\n    return this;\n  }\n  render() {\n    return this;\n  }\n  frame() {\n    return this.text;\n  }\n}\n\nexport function getLoader(options?: string | Options | undefined): Loader {\n  return logger.isVerbose() ? new OraNoop() : ora(options);\n}\n\nexport const NoopLoader = OraNoop;\n"]}
>>>>>>> main
